{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogItem/DialogItemContainer.jsx","components/Dialogs/Dialogs.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","Message","path","dialogsData","id","className","s","dialogs","dialog","dialogLi","src","activeClassName","active","name","lastMessage","DialogItem","messageItems","map","el","onChange","e","onChangeNewMessage","target","value","newMessageText","onClick","onAddMessage","compose","dialogsPage","dispatch","newMessage","updateNewMessageActionCreator","sendMessageActionCreator","Dialogs","DialogItemContainer"],"mappings":"4MAIIA,EAAkB,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAO7B,OAAOC,YAAQN,EAARM,EANmB,SAACC,GAEvB,OAAIA,EAAML,OACH,cAACG,EAAD,eAAeE,IADG,cAAC,IAAD,CAAUC,GAAI,gB,oBCV/CC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,SAAW,4B,2FC4BlFC,EAzBC,SAACJ,GAGb,IAAIK,EAAO,YAAcL,EAAMM,YAAYC,GAE3C,OACI,qBAAKC,UAAWC,IAAEC,QAAlB,SACI,qBAAIF,UAAWC,IAAEE,OAAjB,UACI,oBAAIH,UAAWC,IAAEG,SAAjB,SACI,qBACIC,IAAK,oGAEb,oBAAIL,UAAWC,IAAEG,SAAjB,SACI,gCACI,+BAAM,eAAC,IAAD,CAASX,GAAII,EAAMS,gBAAiBL,IAAEM,OAAtC,cAAgDf,EAAMM,YAAYU,KAAlE,SACN,8BACKhB,EAAMM,YAAYW,yBCYhCC,EA7BI,SAAClB,GAEhB,IASImB,EACAnB,EAAMM,YAAYc,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAASf,YAAae,GAASA,EAAGd,OAG9C,OACI,gCAEI,8BACI,0BAAUe,SAbG,SAACC,GACtBvB,EAAMwB,mBAAmBD,EAAEE,OAAOC,QAYcA,MAAO1B,EAAM2B,mBAEzD,wBAAQC,QApBG,WAEf5B,EAAM6B,gBAkBF,0BAECV,M,yBCMEW,GA1BejC,YAAiBqB,GA0BhCY,YACX/B,aAxBkB,SAACL,GACnB,MAAO,CACHiC,eAAgBjC,EAAMqC,YAAYJ,eAClCrB,YAAaZ,EAAMqC,YAAYzB,gBAId,SAAC0B,GACtB,MAAO,CACHR,mBAAoB,SAACS,GACjBD,EAASE,YAA8BD,KAE3CJ,aAAc,WAEVG,EAASG,oBAWjBtC,IAFWiC,CAGbZ,ICpBakB,UAXC,SAACpC,GAEb,OACI,8BAEI,cAACqC,EAAD","file":"static/js/5.4007752c.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    const RedirectComponent = (props) => {\r\n\r\n        if(!props.isAuth) return <Redirect to={\"/login\"} />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__qLBGH\",\"dialog\":\"Dialogs_dialog__3Ap-V\",\"dialogLi\":\"Dialogs_dialogLi__3OW1-\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    let path = '/dialogs/' + props.dialogsData.id;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <ul className={s.dialog}>\r\n                <li className={s.dialogLi}>\r\n                    <img\r\n                        src={'https://spng.pngfind.com/pngs/s/475-4759930_pepe-meme-rarepepe-slav-russian-pepe-the-frog.png'}/>\r\n                </li>\r\n                <li className={s.dialogLi}>\r\n                    <div>\r\n                        <span><NavLink to={path} activeClassName={s.active}> {props.dialogsData.name} </NavLink></span>\r\n                        <div>\r\n                            {props.dialogsData.lastMessage}\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport Message from \"../Message/Message\";\r\nimport {Redirect} from \"react-router-dom\"\r\nconst DialogItem = (props) => {\r\n\r\n    let onAddMessage = () =>\r\n    {\r\n        props.onAddMessage()\r\n    }\r\n\r\n    let onChangeNewMessage = (e) => {\r\n        props.onChangeNewMessage(e.target.value);\r\n    }\r\n\r\n    let messageItems =\r\n        props.dialogsData.map((el) =>\r\n                <Message dialogsData={el} key={el.id}/>\r\n        );\r\n\r\n    return(\r\n        <div>\r\n\r\n            <div>\r\n                <textarea onChange={onChangeNewMessage} value={props.newMessageText}></textarea>\r\n            </div>\r\n            <button onClick={onAddMessage} >Send message</button>\r\n\r\n            {messageItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport {sendMessageActionCreator, updateNewMessageActionCreator} from \"../../../Redux/DialogsReducer\";\r\nimport DialogItem from \"./DialogItem\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst AuthRedirectComponent = withAuthRedirect(DialogItem);\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        dialogsData: state.dialogsPage.dialogsData\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeNewMessage: (newMessage) => {\r\n            dispatch(updateNewMessageActionCreator(newMessage));\r\n        },\r\n        onAddMessage: () => {\r\n\r\n            dispatch(sendMessageActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//const DialogItemContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(DialogItem);\r\n","import React from 'react';\r\nimport DialogItemContainer from \"./DialogItem/DialogItemContainer\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <DialogItemContainer/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Dialogs; "],"sourceRoot":""}