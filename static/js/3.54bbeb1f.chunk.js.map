{"version":3,"sources":["hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/pepe_profile_info.png","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","React","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","changeEditMode","updateStatus","autoFocus","onBlur","onChange","e","currentTarget","onDoubleClick","ProfileInfo","profile","className","s","img","src","pepe_profile","descriptionBlock","photos","large","Preloader","Post","item","message","like","MyPosts","memo","console","log","postsElements","postsData","map","el","title","id","likesCount","newPostElement","createRef","postBlock","updateNewPostText","current","ref","newPostText","onClick","addPost","posts","MyPostsContainer","profilePage","dispatch","text","updateNewPostActionCreator","addPostActionCreator","Profile","ProfileContainer","this","getUserProfile","match","params","userId","getUserStatus","mapDispatchToProps","compose","withRouter"],"mappings":"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","file":"static/js/3.54bbeb1f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    const RedirectComponent = (props) => {\r\n\r\n        if(!props.isAuth) return <Redirect to={\"/login\"} />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__2WDVX\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__EhnsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__2tT8s\",\"posts\":\"MyPosts_posts__3KUBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__hKxuc\"};","export default __webpack_public_path__ + \"static/media/pepe_profile_info.c26abc30.png\";","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    changeEditMode = () => {\r\n        this.setState({editMode: !this.state.editMode})\r\n        if (this.state.editMode) {\r\n            this.props.updateStatus(this.state.status);\r\n        }\r\n\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status != this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode ?\r\n                    <div>\r\n                        <span onDoubleClick={() => {\r\n                            this.changeEditMode()\r\n                        }}> {this.props.status || \"Введите статус\"}</span>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={() => {\r\n                            this.changeEditMode()\r\n                        }\r\n                        } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const changeEditMode = () => {\r\n        setEditMode(!editMode)\r\n        if (editMode) {\r\n            props.updateStatus(status);\r\n        }\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ?\r\n                <div>\r\n                        <span onDoubleClick={() => {\r\n                            changeEditMode()\r\n                        }}> {props.status || \"Введите статус\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input autoFocus={true} onBlur={() => {\r\n                        changeEditMode()\r\n                    }} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport pepe_profile from './pepe_profile_info.png'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.img}\r\n                    src={pepe_profile}/>\r\n            </div>\r\n            <div className={s.descriptionBlock} >\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <div>\r\n                <img\r\n                    src={'https://spng.pngfind.com/pngs/s/475-4759930_pepe-meme-rarepepe-slav-russian-pepe-the-frog.png'}/>\r\n                {props.message}\r\n                </div>\r\n                <div><span>like: {props.like} </span></div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"render\")\r\n    let postsElements = props.postsData.map((el) => (\r\n        <Post title={\"Post\" + el.id} message={el.message} like={el.likesCount} key={el.id}/>));\r\n\r\n    let newPostElement = React.createRef();\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        props.updateNewPostText(newPostElement.current.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div>\r\n                <h3> My Posts </h3>\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add Posts</button>\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {updateNewPostActionCreator, addPostActionCreator} from \"../../../Redux/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostActionCreator(text))\r\n        },\r\n        addPost: () =>{\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateStatus} from \"../../Redux/ProfileReducer\";\r\nimport { withRouter} from 'react-router-dom'\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUserProfile(this.props.match.params.userId || this.props.userId )\r\n        this.props.getUserStatus(this.props.match.params.userId || this.props.userId)\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        profile = {this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId\r\n})\r\n\r\nlet mapDispatchToProps =\r\n    {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateStatus\r\n    }\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}